<?php

/**
 * @file
 * Contains ucsf_sitemap.install.
 */

/**
 * Simple XML Sitemap setting for the existing articles of type "Media Coverage" is set to "no-index"
 */
function ucsf_sitemap_update_8001(&$sandbox) {
  // Get the node IDs for each article that has a "Media Coverage" term.
  $nids = \Drupal::entityQuery('node')
    ->accessCheck(TRUE)
    ->condition('type', 'article')
    ->condition('field_article_type', '413496')
    ->execute();

  // Create an array of table rows for each node ID.
  $rows = [];
  foreach ($nids as $value) {
    $rows[] = [
      'entity_type' => 'node',
      'entity_id' => $value,
      'inclusion_settings' => 'a:4:{s:5:""index"";b:0;s:8:""priority"";s:3:""1.0"";s:10:""changefreq"";s:5:""daily"";s:14:""include_images"";b:1;}',
      'type' => 'default'
    ];
  }

  // Insert the rows into the table where simple_sitemap stores the data.
  $database = \Drupal::database();
  $query = $database->insert('simple_sitemap_entity_overrides')
    ->fields([
      'entity_type',
      'entity_id',
      'inclusion_settings',
      'type'
    ]);
  foreach ($rows as $record) {
    $query->values($record);
  }
  $query->execute();

  return t('Simple XML Sitemap setting for the existing articles of type "Media Coverage" is set to "no-index"');
}

/**
 * Simple XML Sitemap setting for the existing articles with an "External Url" field filled out is set to "no-index"
 */
function ucsf_sitemap_update_8002(&$sandbox) {
  if (!isset($sandbox['nids'])) {
    // Get the node IDs for each article that has an external url field filled out.
    $nids = \Drupal::entityQuery('node')
      ->accessCheck(TRUE)
      ->condition('type', 'article')
      ->exists('field_external_url')
      ->execute();

    // Set the values persisting between Batches.
    $sandbox['nids'] = array_values($nids);
    $sandbox['total'] = count($nids);
    $sandbox['current'] = 0;

    // Exit if there are no matching nids.
    if (empty($sandbox['nids'])) {
      $sandbox['#finished'] = 1;
      return t('No articles to process');
    }
  }

  // Get the current batch of 250 nids.
  $batch_nids = array_slice($sandbox['nids'], $sandbox['current'], 250);

  $inclusion_settings = 'a:4:{s:5:""index"";b:0;s:8:""priority"";s:3:""1.0"";s:10:""changefreq"";s:5:""daily"";s:14:""include_images"";b:1;}';

  // Update or Insert the rows into the table where simple_sitemap stores the data.
  $database = \Drupal::database();

  foreach ($batch_nids as $nid) {
    $database->merge('simple_sitemap_entity_overrides')
      ->key('entity_id', $nid)
      ->insertFields([
        'entity_type' => 'node',
        'entity_id' => $nid,
        'inclusion_settings' => $inclusion_settings,
        'type' => 'default',
      ])
      ->updateFields([
        'inclusion_settings' => $inclusion_settings,
      ])
      ->execute();

    $sandbox['current']++;
  }

  // Add a status messages for drush and UI.
  $message = $sandbox['current'] . ' of ' . $sandbox['total'] . ' articles processed.';

  if (function_exists('drush_print')) {
    drush_print($message);
  }
  else {
    \Drupal::messenger()->addMessage($message);
  }

  // Determine if the batch is finished or how far along it is.
  if ($sandbox['current'] >= $sandbox['total']) {
    $sandbox['#finished'] = 1;
    return;
  }
  else {
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);
  }
}
