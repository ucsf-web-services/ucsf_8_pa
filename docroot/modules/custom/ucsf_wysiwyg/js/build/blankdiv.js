!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.blankdiv=t())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/blankdiv/src/blankdiv.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Blankdiv)\n/* harmony export */ });\n/* harmony import */ var _blankdivediting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blankdivediting */ "./js/ckeditor5_plugins/blankdiv/src/blankdivediting.js");\n/* harmony import */ var _blankdivui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blankdivui */ "./js/ckeditor5_plugins/blankdiv/src/blankdivui.js");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/**\n * @file This is what CKEditor refers to as a master (glue) plugin. Its role is\n * just to load the “editing” and “UI” components of this Plugin. Those\n * components could be included in this file, but\n *\n * I.e, this file\'s purpose is to integrate all the separate parts of the plugin\n * before it\'s made discoverable via index.js.\n */\n\n\n\n\n\nclass Blankdiv extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__.Plugin {\n  static get requires() {\n    return [_blankdivediting__WEBPACK_IMPORTED_MODULE_0__["default"], _blankdivui__WEBPACK_IMPORTED_MODULE_1__["default"]];\n  }\n}\n\n//# sourceURL=webpack://CKEditor5.blankdiv/./js/ckeditor5_plugins/blankdiv/src/blankdiv.js?')},"./js/ckeditor5_plugins/blankdiv/src/blankdivcommand.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BlankdivCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n\nclass BlankdivCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute(attributes) {\n      const model = this.editor.model;\n      const selection = model.document.selection;\n      const selectedBlankdiv = getSelectedBlankdivxWidget( selection );\n      console.log(model)\n      model.change( writer => {\n      if ( selectedBlankdiv ) {     \n          writer.setAttribute('align', attributes.align, selectedBlankdiv );\n          writer.setAttribute('blankdiv', attributes.blankdiv, selectedBlankdiv );\n        \n      } else {\n        model.insertContent(createBlankdivElement(writer, attributes));\n      }\n    } );\n      // const isCallout = selection.getSelectedElement();\n    // console.log(model)\n    //   if (isCallout && isCallout.name == \"ucsfcalloutbox\") {\n    //     writer.setAttribute('data-align', attributes.align, model)\n    //     writer.setAttribute('data-image', attributes.image, model)\n    //     return isCallout\n    //   } else {\n    //     model.insertContent(createCalloutBoxElement(writer, attributes));\n\n    //   }\n  }\n\n    refresh() {\n      const model = this.editor.model;\n      const selection = model.document.selection;\n      const isAllowed = model.schema.checkChild( selection.focus.parent, 'blankdiv' );\n      const allowedIn = model.schema.findAllowedParent(\n        selection.getFirstPosition(),\n        'blankdiv',\n      );\n      this.isEnabled = allowedIn !== null;\n    }\n\n}\nfunction createBlankdivElement( writer, attributes ) {\n    console.log(attributes)\n    const blankdiv = writer.createElement( 'blankdiv');\n    writer.setAttribute('align', attributes.align, blankdiv)\n\t  writer.setAttribute('blankdiv', attributes.blankdiv, blankdiv)\n    return blankdiv;\n  }\n\n  function getSelectedBlankdivxWidget( selection ) {\n    const selectedElement = selection.getSelectedElement();\n  \n    if ( selectedElement && selectedElement.is( 'element', 'blankdiv' ) ) {\n      return selectedElement;\n    }\n  \n    return null;\n  }  \n\n//# sourceURL=webpack://CKEditor5.blankdiv/./js/ckeditor5_plugins/blankdiv/src/blankdivcommand.js?")},"./js/ckeditor5_plugins/blankdiv/src/blankdivediting.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BlankdivEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _blankdivcommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blankdivcommand */ \"./js/ckeditor5_plugins/blankdiv/src/blankdivcommand.js\");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* harmony import */ var ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ckeditor5/src/utils */ \"ckeditor5/src/utils.js\");\n\n\n\n\n\nclass BlankdivEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    static get pluginName() {\n        return 'BlankdivEditing';\n      }\n      static get requires() {\n        return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.Widget];\n      }\n    init() {\n        this._defineSchema();\n        this._defineConverters();\n        this.editor.commands.add(\n          'insertBlankdiv', new _blankdivcommand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.editor)\n        );\n    }\n    _defineSchema() {\n        const schema = this.editor.model.schema;\n\n        schema.register( 'blankdiv', {\n            isObject: true,\n            allowWhere: '$block',\n            allowAttributes: [ 'blankdiv', 'align', 'class' ]\n        } );\n    }\n    _defineConverters() {\n        const editor = this.editor;\n        const conversion = this.editor.conversion;\n\n        editor.data.registerRawContentMatcher( {\n\t\t\tname: 'div',\n\t\t\tclasses: 'wysiwyg_blankdiv'\n\t\t} );\n\n        conversion.attributeToAttribute( {\n            model: {\n                name: 'blankdiv',\n                key: 'align',\n                values: [ 'half-image-right', 'half-image-left', 'half-image-right-full', 'half-image-left-full',  'full-bleed-image' ]\n            },\n            // view: (modelElement) => {\n            //     console.log(modelElement)\n            // }\n            view: {\n                // key: 'class'\n                'half-image-right': {\n                    key: 'class',\n                    value: 'half-image-right'\n                },\n                'half-image-right-full': {\n                    key: 'class',\n                    value: 'half-image-right-full'\n                },\n                'half-image-left': {\n                    key: 'class',\n                    value: 'half-image-left'\n                },\n                'half-image-left-full': {\n                    key: 'class',\n                    value: 'half-image-left-full'\n                },\n                'full-bleed-image': {\n                    key: 'class',\n                    value: 'full-bleed-image'\n                }\n                \n            }\n        } );\n        // conversion.for( 'downcast' ).attributeToElement( {\n        //     model: 'blankdiv',\n        //     view: ( modelAttributeValue, { writer } ) => {\n        //         // Do not convert empty attributes (lack of value means no mention).\n        //         if ( !modelAttributeValue ) {\n        //             return;\n        //         }\n        //         console.log(modelAttributeValue)\n        //         // return writer.insert( 'a', {\n        //         //     class: 'mention',\n        //         //     'data-mention': modelAttributeValue.id,\n        //         //     'data-user-id': modelAttributeValue.userId,\n        //         //     'href': modelAttributeValue.link\n        //         // })\n        //     }\n        // } );\n        conversion.for( 'upcast' ).elementToElement( {\n            view: {\n                name: 'div',\n                classes: 'wysiwyg_blankdiv',\n            },\n            model: ( viewElement, { writer } ) => {\n               \n                // const dataAlign = viewElement.getAttribute('align')\n                const classes = viewElement.getClassNames()\n                console.log(classes)\n                const dataAlign =  classes.find(v => v !== 'wysiwyg_blankdiv')\n                console.log(dataAlign)\n                return writer.createElement( 'blankdiv', { align: dataAlign, blankdiv: viewElement.getCustomProperty( '$rawContent' ) } );\n            }\n            \n        } );\n\n        conversion.for( 'dataDowncast' ).elementToElement( {\n            model: 'blankdiv',\n            view: ( modelElement, { writer } ) => {\n                let opt = { 'class': 'wysiwyg_blankdiv ' }\n\n                const align = modelElement.getAttribute( 'align' );\n                opt[\"class\"] = opt[\"class\"] + align;\n\t\t\t\treturn writer.createRawElement( 'div', { class: opt[\"class\"] }, function( domElement ) {\n\t\t\t\t\tdomElement.innerHTML = modelElement.getAttribute( 'blankdiv' ) || '';\n\t\t\t\t} );\n\t\t\t}\n        } )\n        conversion.for( 'editingDowncast' ).elementToStructure( {\n\t\t\tmodel: { name: 'blankdiv', attributes: [ 'blankdiv', 'align' ] },\n\t\t\tview: ( modelElement, { writer } ) => {\n                let domContentWrapper;\n\t\t\t\tlet state;\n\t\t\t\tlet props;\n                let opt = { 'class': 'wysiwyg_blankdiv ' }\n\n                const align = modelElement.getAttribute( 'align' );\n                opt[\"class\"] = opt[\"class\"] + align;\n\t\t\t\tconst viewContentWrapper = writer.createRawElement( 'div', {\n\t\t\t\t\tclass: 'wysiwyg_blankdiv__content-wrapper'\n\t\t\t\t}, function( domElement ) {\n\t\t\t\t\tdomContentWrapper = domElement;\n\n\t\t\t\t\trenderContent( { editor, domElement, modelElement, props } );\n\n\t\t\t\t\t// Since there is a `data-cke-ignore-events` attribute set on the wrapper element in the editable mode,\n\t\t\t\t\t// the explicit `mousedown` handler on the `capture` phase is needed to move the selection onto the whole\n\t\t\t\t\t// HTML embed widget.\n\t\t\t\t\t// domContentWrapper.addEventListener( 'mousedown', () => {\n\t\t\t\t\t// \tif ( state.isEditable ) {\n\t\t\t\t\t// \t\tconst model = editor.model;\n\t\t\t\t\t// \t\tconst selectedElement = model.document.selection.getSelectedElement();\n\n\t\t\t\t\t// \t\t// Move the selection onto the whole HTML embed widget if it's currently not selected.\n\t\t\t\t\t// \t\tif ( selectedElement !== modelElement ) {\n\t\t\t\t\t// \t\t\tmodel.change( writer => writer.setSelection( modelElement, 'on' ) );\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }, true );\n\t\t\t\t} );\n                const viewContainer = writer.createContainerElement( 'div', {\n\t\t\t\t\tclass: opt[\"class\"],\n\t\t\t\t\t'data-html-embed-label': 'HTML snippet',\n\t\t\t\t}, viewContentWrapper)\n                return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.toWidget)( viewContainer, writer, {\n\t\t\t\t\tlabel: 'HTML snippet',\n\t\t\t\t\thasSelectionHandle: true\n\t\t\t\t} );\n            }\n        })\n        function renderContent( {\n\t\t\teditor,\n\t\t\tdomElement,\n\t\t\tmodelElement,\n\t\t\tprops\n\t\t}) {\n            console.log(editor)\n            console.log(domElement)\n            console.log(modelElement)\n\t\t\t// Remove all children;\n\t\t\tdomElement.textContent = '';\n\n\t\t\tconst domDocument = domElement.ownerDocument;\n\t\t\tlet domTextarea;\n\n\t\t\t// if ( state.isEditable ) {\n\t\t\t// \tconst textareaProps = {\n\t\t\t// \t\tisDisabled: false,\n\t\t\t// \t\tplaceholder: props.textareaPlaceholder\n\t\t\t// \t};\n\n\t\t\t// \tdomTextarea = createDomTextarea( { domDocument, state, props: textareaProps } );\n\n\t\t\t// \tdomElement.append( domTextarea );textareaPlaceholder\n\t\t\t// } else if ( state.showPreviews ) {\n\t\t\t// \tconst previewContainerProps = {\n\t\t\t// \t\tsanitizeHtml: props.sanitizeHtml\n\t\t\t// \t};\n\n\t\t\t// \tdomElement.append( createPreviewContainer( { domDocument, state, props: previewContainerProps, editor } ) );\n\t\t\t// } else {\n\t\t\t// \tconst textareaProps = {\n\t\t\t// \t\tisDisabled: true,\n\t\t\t// \t\tplaceholder: props.textareaPlaceholder\n\t\t\t// \t};\n\n\t\t\t// \tdomElement.append( createDomTextarea( { domDocument, state, props: textareaProps } ) );\n\t\t\t// }\n\n            domElement.append( createPreviewContainer( { domDocument, modelElement, editor } ) );\n\t\t\t// const buttonsWrapperProps = {\n\t\t\t// \tonEditClick: props.onEditClick,\n\t\t\t// \tonSaveClick: () => {\n\t\t\t// \t\tprops.onSaveClick( domTextarea.value );\n\t\t\t// \t},\n\t\t\t// \tonCancelClick: props.onCancelClick\n\t\t\t// };\n\n\t\t\t// domElement.prepend( createDomButtonsWrapper( { editor, domDocument, state, props: buttonsWrapperProps } ) );\n\t\t}\n        function createPreviewContainer( {\n\t\t\tdomDocument,\n\t\t\tmodelElement,\n            editor\n\t\t} ) {\n\t\t\tconst sanitizedOutput = modelElement.getAttribute('blankdiv');\n\t\t\tconst placeholderText = sanitizedOutput.length > 0 ?\n\t\t\t\t'No preview available' :\n\t\t\t\t'Empty snippet content' ;\n\n\t\t\tconst domPreviewPlaceholder = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__.createElement)( domDocument, 'div', {\n\t\t\t\tclass: 'ck ck-reset_all raw-html-embed__preview-placeholder'\n\t\t\t}, placeholderText );\n\n\t\t\tconst domPreviewContent = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__.createElement)( domDocument, 'div', {\n\t\t\t\tclass: 'raw-html-embed__preview-content',\n\t\t\t\tdir: editor.locale.contentLanguageDirection\n\t\t\t} );\n\n\t\t\t// Creating a contextual document fragment allows executing scripts when inserting into the preview element.\n\t\t\t// See: #8326.\n\t\t\tconst domRange = domDocument.createRange();\n\t\t\tconst domDocumentFragment = domRange.createContextualFragment( sanitizedOutput );\n\n\t\t\tdomPreviewContent.appendChild( domDocumentFragment );\n\n\t\t\tconst domPreviewContainer = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__.createElement)( domDocument, 'div', {\n\t\t\t\tclass: 'raw-html-embed__preview'\n\t\t\t}, [\n\t\t\t\tdomPreviewPlaceholder, domPreviewContent\n\t\t\t] );\n\n\t\t\treturn domPreviewContainer;\n\t\t}\n        function createDomTextarea( {\n\t\t\tdomDocument,\n\t\t\tstate,\n\t\t\tprops\n\t\t} ) {\n\t\t\tconst domTextarea = (0,ckeditor5_src_utils__WEBPACK_IMPORTED_MODULE_3__.createElement)( domDocument, 'textarea', {\n\t\t\t\tplaceholder: props.placeholder,\n\t\t\t\tclass: 'ck ck-reset ck-input ck-input-text raw-html-embed__source'\n\t\t\t} );\n\n\t\t\tdomTextarea.disabled = props.isDisabled;\n\t\t\tdomTextarea.value = state.getRawHtmlValue();\n\n\t\t\treturn domTextarea;\n\t\t}\n\n    }\n}\n\n//# sourceURL=webpack://CKEditor5.blankdiv/./js/ckeditor5_plugins/blankdiv/src/blankdivediting.js?")},"./js/ckeditor5_plugins/blankdiv/src/blankdivui.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BlankdivUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _blankdivview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blankdivview */ \"./js/ckeditor5_plugins/blankdiv/src/blankdivview.js\");\n\n\n\n\nclass BlankdivUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    static get requires() {\n\t\treturn [ ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon ];\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\t\n\t\tthis._balloon = this.editor.plugins.get( ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon );\n\t\tconst viewDocument = this.editor.editing.view.document;\n\n\t\t// Handle click on view document and show panel when selection is placed inside the link element.\n\t\t// Keep panel open until selection will be inside the same link element.\n\t\tthis.listenTo( viewDocument, 'click', () => {\n\t\t\t\n\t\t\tconst isBlankdiv = this._getSelectedElement();\n\n\t\t\tif ( isBlankdiv ) {\n\t\t\t\tthis.formView = this._createFormView();\n\t\t\t\tthis._showUI();\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'Blankdiv', (locale) => {\n\t\t\tconst command = editor.commands.get('insertBlankdiv');\n\t\t\tconst button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n\t\t\tbutton.set({\n                label: 'Blankdiv',\n                withText: true,\n                tooltip: true,\n            });\n\n\t\t\tbutton.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n\t\t\t// Show the UI on button click.\n\t\t\tthis.listenTo( button, 'execute', () => {\n\t\t\t\tthis.formView = this._createFormView();\n\t\t\t\tthis._showUI();\n\t\t\t} );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\t_createFormView() {\n\t\tconst editor = this.editor;\n\t\tconst formView = new _blankdivview__WEBPACK_IMPORTED_MODULE_2__[\"default\"]( editor);\n\n\t\t// Execute the command after clicking the \"Save\" button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\t// Grab values from the abbreviation and title input fields.\n            console.log(formView.element)\n\t\t\tconst align = formView.element.querySelector('#align-dropdown').value;\n\t\t\tconst blankdiv = formView.element.querySelector('#blankdiv').value;\n\t\t\tconst formValues = { align, blankdiv}\n\t\t\teditor.execute('insertBlankdiv', formValues)\n            // Hide the form view after submit.\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Hide the form view after clicking the \"Cancel\" button.\n\t\tthis.listenTo( formView, 'cancel', () => {\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Hide the form view when clicking outside the balloon.\n\t\t(0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.clickOutsideHandler)( {\n\t\t\temitter: formView,\n\t\t\tactivator: () => this._balloon.visibleView === formView,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideUI()\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t_showUI() {\n\t\tthis._balloon.add( {\n\t\t\tview: this.formView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\n\t}\n\n\t_hideUI() {\n\t\tthis._balloon.remove( this.formView );\n\t\tthis.editor.editing.view.focus();\n\t}\n\t_getSelectedElement() {\n\t\tconst model = this.editor.model;\n      \tconst selection = model.document.selection;\n      \tconst selectedElement = selection.getSelectedElement();\n\t\tif (selectedElement && selectedElement.name == \"blankdiv\") {\n\t\t\treturn selectedElement\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\t_getBalloonPositionData() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet target = null;\n\n\t\t// Set a target position by converting view selection range to DOM\n\t\ttarget = () => view.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange() );\n\n\t\treturn {\n\t\t\ttarget\n\t\t};\n\t}\n}\n\n//# sourceURL=webpack://CKEditor5.blankdiv/./js/ckeditor5_plugins/blankdiv/src/blankdivui.js?")},"./js/ckeditor5_plugins/blankdiv/src/blankdivview.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BlankdivView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n  \n  \n  // cSpell:ignore Blankdivview\n  class BlankdivView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\n    constructor( editor ) {\n      super( editor.locale );\n      const model = editor.model;\n      const selection = model.document.selection;\n      const selectedElement = selection.getSelectedElement();\n      let align = 'half-image-left'\n      let blankdiv = ''\n      if (selectedElement && selectedElement.name == \"blankdiv\") {\n        align = selectedElement.getAttribute('align')\n        blankdiv = selectedElement.getAttribute('blankdiv')\n      }\n      this.selectLabel = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n        tag: 'label',\n        attributes: {\n            for: 'align-dropdown'\n        },\n        children: ['Align Option:']\n        });\n\n        this.select = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'select',\n            attributes: {\n                id: 'align-dropdown',\n                class: 'ck-balloon-panel__select'\n            },\n            children: [\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'half-image-right',\n                        selected: (align && align == 'half-image-right') ? true : false\n                    },\n                    children: ['Half Image Right']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'half-image-right-full',\n                        selected: (align && align == 'half-image-right-full') ? true : false\n                    },\n                    children: ['Full Bleed Right']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'half-image-left',\n                        selected: (align && align == 'half-image-left') ? true : false\n                    },\n                    children: ['Half Image Left']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'half-image-left-full',\n                        selected: (align && align == 'half-image-left-full') ? true : false\n                    },\n                    children: ['Full Bleed Left']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'full-bleed-image',\n                        selected: (align && align == 'full-bleed-image') ? true : false\n                    },\n                    children: ['Full Bleed']\n                })\n            ]\n        });\n        this.scriptLabel =  new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'label',\n            attributes: {\n                for: 'blankdiv'\n            },\n            children: ['Script:']\n        });\n        this.script =  new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'textarea',\n            attributes: {\n                id: 'blankdiv',\n                rows: 12\n            },\n            children: [blankdiv]\n        });\n\n      this.saveButtonView = this._createButton( 'Save', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.check, 'ck-button-save' );\n      // Submit type of the button will trigger the submit event on entire form when clicked \n          // (see submitHandler() in render() below).\n      this.saveButtonView.type = 'submit';\n  \n      this.cancelButtonView = this._createButton( 'Cancel', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.cancel, 'ck-button-cancel' );\n  \n      // Delegate ButtonView#execute to FormView#cancel\n      this.cancelButtonView.delegate( 'execute' ).to( this, 'cancel' );\n\n      this.setTemplate( {\n        tag: 'form',\n        attributes: {\n          class: [ 'ck', 'ck-blankdiv-form', 'ck-reset_all-excluded' ],\n          tabindex: '-1'\n        },\n        children:  [\n            this.selectLabel,\n            this.select,\n            this.scriptLabel,\n            this.script,\n            this.saveButtonView,\n            this.cancelButtonView\n        ],\n      } );\n    }\n  \n    render() {\n      super.render();\n  \n      // Submit the form when the user clicked the save button or pressed enter in the input.\n      (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.submitHandler)( {\n        view: this\n      } );\n    }\n\n    _createInput( label ) {\n      const labeledInput = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.LabeledFieldView( this.locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createLabeledInputText );\n  \n      labeledInput.label = label;\n  \n      return labeledInput;\n    }\n  \n    _createButton( label, icon, className ) {\n      const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n  \n      button.set( {\n        label,\n        icon,\n        tooltip: true,\n        class: className\n      } );\n  \n      return button;\n    }\n  }\n\n\n//# sourceURL=webpack://CKEditor5.blankdiv/./js/ckeditor5_plugins/blankdiv/src/blankdivview.js?")},"./js/ckeditor5_plugins/blankdiv/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _blankdiv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blankdiv */ "./js/ckeditor5_plugins/blankdiv/src/blankdiv.js");\n/**\n * @module ucsf_wysiwyg\n */\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    Blankdiv: _blankdiv__WEBPACK_IMPORTED_MODULE_0__["default"]\n});\n\n//# sourceURL=webpack://CKEditor5.blankdiv/./js/ckeditor5_plugins/blankdiv/src/index.js?')},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.blankdiv/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.blankdiv/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/utils.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/utils.js");\n\n//# sourceURL=webpack://CKEditor5.blankdiv/delegated_./utils.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.blankdiv/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/blankdiv/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));