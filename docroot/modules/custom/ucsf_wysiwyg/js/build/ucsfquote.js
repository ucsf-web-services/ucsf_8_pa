!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.ucsfquote=t())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/ucsfquote/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ucsfquote__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucsfquote */ "./js/ckeditor5_plugins/ucsfquote/src/ucsfquote.js");\n/**\n * @module ucsf_wysiwyg\n */\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    UcsfQuote: _ucsfquote__WEBPACK_IMPORTED_MODULE_0__["default"]\n});\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/./js/ckeditor5_plugins/ucsfquote/src/index.js?')},"./js/ckeditor5_plugins/ucsfquote/src/ucsfquote.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ UcsfQuote)\n/* harmony export */ });\n/* harmony import */ var _ucsfquoteediting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ucsfquoteediting */ "./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteediting.js");\n/* harmony import */ var _ucsfquoteui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ucsfquoteui */ "./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteui.js");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/**\n * @file This is what CKEditor refers to as a master (glue) plugin. Its role is\n * just to load the “editing” and “UI” components of this Plugin. Those\n * components could be included in this file, but\n *\n * I.e, this file\'s purpose is to integrate all the separate parts of the plugin\n * before it\'s made discoverable via index.js.\n */\n\n\n\n\n\nclass UcsfQuote extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_2__.Plugin {\n  static get requires() {\n    return [_ucsfquoteediting__WEBPACK_IMPORTED_MODULE_0__["default"], _ucsfquoteui__WEBPACK_IMPORTED_MODULE_1__["default"]];\n  }\n}\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/./js/ckeditor5_plugins/ucsfquote/src/ucsfquote.js?')},"./js/ckeditor5_plugins/ucsfquote/src/ucsfquotecommand.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UcsfQuoteCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n\nclass UcsfQuoteCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute(attributes) {\n      const model = this.editor.model;\n      const selection = model.document.selection;\n      const selectedUcsfQuote = getSelectedUcsfQuoteWidget( selection );\n      model.change( writer => {\n      if ( selectedUcsfQuote ) {     \n          writer.setAttribute('data-align', attributes.align, selectedUcsfQuote );\n          writer.setAttribute('data-image', attributes.image, selectedUcsfQuote );\n        \n      } else {\n        model.insertContent(createUcsfQuoteElement(writer, attributes));\n      }\n    } );\n  }\n\n    refresh() {\n      const model = this.editor.model;\n      const selection = model.document.selection;\n      const isAllowed = model.schema.checkChild( selection.focus.parent, 'ucsfquote' );\n      const allowedIn = model.schema.findAllowedParent(\n        selection.getFirstPosition(),\n        'ucsfquote',\n      );\n      this.isEnabled = allowedIn !== null;\n    }\n\n}\nfunction createUcsfQuoteElement( writer, attributes ) {\n    const ucsfquote = writer.createElement( 'ucsfquote');\n    writer.setAttribute('data-align', attributes.align, ucsfquote)\n\twriter.setAttribute('data-image', attributes.image, ucsfquote)\n    const content = writer.createElement( 'ucsfQuoteContent' );\n    const cite = writer.createElement('ucsfQuoteCite');\n\n    writer.insertText('Lorem ipsum dolor sit amet, ex labore vivendo laboramus has, vel at putant legendos. Quod appareat id eos, noster malorum et mea.', content);\n    writer.append(content, ucsfquote);\n\n    writer.insertText('Vivendo Laboramus, PhD', cite);\n    writer.append(cite, ucsfquote);\n\n    return ucsfquote;\n  }\n\n  function getSelectedUcsfQuoteWidget( selection ) {\n    const selectedElement = selection.getSelectedElement();\n  \n    if ( selectedElement && selectedElement.is( 'element', 'ucsfquote' ) ) {\n      return selectedElement;\n    }\n  \n    return null;\n  }  \n  \n\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/./js/ckeditor5_plugins/ucsfquote/src/ucsfquotecommand.js?")},"./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteediting.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UcsfQuoteEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _ucsfquotecommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ucsfquotecommand */ \"./js/ckeditor5_plugins/ucsfquote/src/ucsfquotecommand.js\");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n\n\n\n\nclass UcsfQuoteEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    static get pluginName() {\n        return 'UcsfQuoteEditing';\n      }\n      static get requires() {\n        return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.Widget];\n      }\n    init() {\n        this._defineSchema();\n        this._defineConverters();\n        this.editor.commands.add(\n          'insertUcsfQuote', new _ucsfquotecommand__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.editor)\n        );\n    }\n    _defineSchema() {\n        const schema = this.editor.model.schema;\n    \n        schema.register( 'ucsfquote', {\n            isObject: true,\n            allowWhere: '$block',\n            allowAttributes: [ 'colorAccent', 'align', 'class' ]\n        } );\n        schema.register( 'ucsfQuoteContent', {\n            isLimit: true,\n            allowIn: 'ucsfquote',\n            allowContentOf: '$block'\n        } );\n        schema.register( 'ucsfQuoteCite', {\n            allowIn: 'ucsfquote',\n            allowContentOf: '$block'\n        } );\n      }\n    _defineConverters() {\n        const conversion = this.editor.conversion;\n        conversion.attributeToAttribute( {\n            model: {\n                name: 'ucsfquote',\n                key: 'align',\n                values: [ 'half-left', 'half-right', 'full-right' ]\n            },\n            view: {\n                'half-left': {\n                    key: 'class',\n                    value: 'blockquote--half-left'\n                },\n                'half-right': {\n                    key: 'class',\n                    value: 'blockquote--half-right'\n                },\n                'full-right': {\n                    key: 'class',\n                    value: 'blockquote--full-right'\n                }\n            }\n        } );\n        conversion.for( 'upcast' ).elementToElement( {\n            view: {\n                name: 'blockquote',\n                classes: 'blockquote',\n            },\n            model: ( viewElement, { writer } ) => {\n                const classes = viewElement.getClassNames()\n                const dataAlign =  classes.find(v => v !== 'blockquote')\n                const dataImage = viewElement.getAttribute('data-image')\n                return writer.createElement( 'ucsfquote', { 'data-image': dataImage, 'align': dataAlign } );\n            }\n            \n        } );\n\n        conversion.for( 'dataDowncast' ).elementToElement( {\n            model: 'ucsfquote',            \n            view: ( modelElement, { writer: viewWriter } ) => {\n                let opt = { 'class': 'blockquote' }\n\n                const align = modelElement.getAttribute( 'align' )\n                opt[\"class\"] = opt[\"class\"] + \" blockquote--\" + align;\n                const blockquote = viewWriter.createContainerElement( 'blockquote', opt );\n\n                // Enable widget handling on a placeholder element inside the editing view.\n                return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.toWidget)( blockquote, viewWriter);\n            }\n        } )\n\n        conversion.for( 'editingDowncast' ).elementToElement( {\n            model: 'ucsfquote',\n            view: ( modelElement, { writer: viewWriter } ) => {\n\t\t\t\tlet opt = { 'class': 'blockquote' }\n\n                const align = modelElement.getAttribute( 'align' )\n                opt[\"class\"] = opt[\"class\"] + \" blockquote--\" + align;\n                const blockquote = viewWriter.createContainerElement( 'blockquote', opt );\n                // Enable widget handling on a placeholder element inside the editing view.\n                return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.toWidget)( blockquote, viewWriter, { label: 'callout box widget' } );\n            }\n        } )\n\n        conversion.for( 'upcast' ).elementToElement( {\n            model: 'ucsfQuoteContent',\n            view: {\n                name: 'p',\n                classes: 'blockquote-content__text'\n            }\n        } );\n\n        conversion.for( 'dataDowncast' ).elementToElement( {\n            model: 'ucsfQuoteContent',\n            view: {\n                name: 'p',\n                classes: 'blockquote-content__text'\n            }\n        } );\n\n        conversion.for( 'editingDowncast' ).elementToElement( {\n            model: 'ucsfQuoteContent',\n            view: ( modelElement, { writer: viewWriter } ) => {\n                const div = viewWriter.createEditableElement( 'p', { class: 'blockquote-content__text' } );\n\n                return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.toWidgetEditable)( div, viewWriter );\n            }\n        } );\n\n        conversion.for( 'upcast' ).elementToElement( {\n            model: 'ucsfQuoteCite',\n            view: {\n                name: 'p',\n                classes: 'blockquote-content__cite'\n            }\n        } );\n\n        conversion.for( 'dataDowncast' ).elementToElement( {\n            model: 'ucsfQuoteCite',\n            view: {\n                name: 'p',\n                classes: 'blockquote-content__cite'\n            }\n        } );\n\n        conversion.for( 'editingDowncast' ).elementToElement( {\n            model: 'ucsfQuoteCite',\n            view: ( modelElement, { writer: viewWriter } ) => {\n                const div = viewWriter.createEditableElement( 'p', { class: 'blockquote-content__cite' } );\n\n                return (0,ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_2__.toWidgetEditable)( div, viewWriter );\n            }\n        } );\n  \n      } \n}\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteediting.js?")},"./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteui.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UcsfQuoteUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _ucsfquoteview__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ucsfquoteview */ \"./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteview.js\");\n\n\n\n\nclass UcsfQuoteUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n    static get requires() {\n\t\treturn [ ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon ];\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\t\n        // Create the balloon and the form view.\n\t\tthis._balloon = this.editor.plugins.get( ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon );\n\t\tconst viewDocument = this.editor.editing.view.document;\n\n\t\t// Handle click on view document and show panel when selection is placed inside the link element.\n\t\t// Keep panel open until selection will be inside the same link element.\n\t\tthis.listenTo( viewDocument, 'click', () => {\n\t\t\t\n\t\t\tconst isCallout = this._getSelectedElement();\n\n\t\t\tif ( isCallout ) {\n\t\t\t\tthis.formView = this._createFormView();\n\t\t\t\tthis._showUI();\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'UcsfQuote', (locale) => {\n\t\t\tconst command = editor.commands.get('insertUcsfQuote');\n\t\t\tconst button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n\t\t\tbutton.set({\n                label: 'UcsfQuote',\n                withText: true,\n                tooltip: true,\n            });\n\n\t\t\tbutton.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n\t\t\t// Show the UI on button click.\n\t\t\tthis.listenTo( button, 'execute', () => {\n\t\t\t\t// editor.execute('insertCalloutBox')\n\t\t\t\tthis.formView = this._createFormView();\n\t\t\t\tthis._showUI();\n\t\t\t} );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\t_createFormView() {\n\t\tconst editor = this.editor;\n\t\tconst formView = new _ucsfquoteview__WEBPACK_IMPORTED_MODULE_2__[\"default\"]( editor);\n\n\t\t// Execute the command after clicking the \"Save\" button.\n\t\tthis.listenTo( formView, 'submit', () => {\n\t\t\t// Grab values from the abbreviation and title input fields.\n\t\t\tconst align = formView.element.querySelector('#align-dropdown').value;\n\t\t\tconst color = formView.element.querySelector('#color-dropdown').value;\n\t\t\tconst formValues = { align, color}\n\t\t\teditor.execute('insertUcsfQuote', formValues)\n            // Hide the form view after submit.\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Hide the form view after clicking the \"Cancel\" button.\n\t\tthis.listenTo( formView, 'cancel', () => {\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Hide the form view when clicking outside the balloon.\n\t\t(0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.clickOutsideHandler)( {\n\t\t\temitter: formView,\n\t\t\tactivator: () => this._balloon.visibleView === formView,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideUI()\n\t\t} );\n\n\t\treturn formView;\n\t}\n\n\t_showUI() {\n\t\tthis._balloon.add( {\n\t\t\tview: this.formView,\n\t\t\tposition: this._getBalloonPositionData()\n\t\t} );\n\n\t}\n\n\t_hideUI() {\n\n\n\t\tthis._balloon.remove( this.formView );\n\t\tthis.editor.editing.view.focus();\n\t}\n\t_getSelectedElement() {\n\t\tconst model = this.editor.model;\n      \tconst selection = model.document.selection;\n      \tconst selectedElement = selection.getSelectedElement();\n\t\tif (selectedElement && selectedElement.name == \"ucsfquote\") {\n\t\t\treturn selectedElement\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\t_getBalloonPositionData() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tlet target = null;\n\n\t\t// Set a target position by converting view selection range to DOM\n\t\ttarget = () => view.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange() );\n\n\t\treturn {\n\t\t\ttarget\n\t\t};\n\t}\n}\n\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteui.js?")},"./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteview.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UcsfQuoteView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n  \n  \n  // cSpell:ignore UcsfQuoteView\n  class UcsfQuoteView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\n    constructor( editor ) {\n        super( editor.locale );\n        const model = editor.model;\n        const selection = model.document.selection;\n        const selectedElement = selection.getSelectedElement();\n        const bind = this.bindTemplate;\n\n        let align = 'half-left'\n        let color = 'blue'\n        if (selectedElement && selectedElement.name == \"ucsfquote\") {\n            align = selectedElement.getAttribute('align')\n            color = selectedElement.getAttribute('color')\n        }\n        this.selectLabel = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'label',\n            attributes: {\n                for: 'align-dropdown'\n            },\n            children: ['Align Option:']\n            });\n\n        this.select = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'select',\n            attributes: {\n                id: 'align-dropdown',\n                class: 'ck-balloon-panel__select'\n            },\n            on: {\n                change: bind.to( evt => {\n                    console.log( `${ evt.target } has been change!` );\n                    console.log(this.select)\n                } )\n            },\n            children: [\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'half-left',\n                        selected: (align && align == 'half-left') ? true : false\n                    },\n                    children: ['Align Left']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'half-right',\n                        selected: (align && align == 'half-right') ? true : false\n                    },\n                    children: ['Align Right']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'full-right',\n                        selected: (align && align == 'full-right') ? true : false\n                    },\n                    children: ['Align Right Full-Width']\n                })\n            ]\n        });\n        this.colorLabel = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'label',\n            attributes: {\n                for: 'color-dropdown'\n            },\n            children: ['color Option:']\n            });\n\n        this.color = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n            tag: 'select',\n            attributes: {\n                id: 'color-dropdown',\n                class: 'ck-balloon-panel__select'\n            },\n            children: [\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'blue',\n                        selected: (color && color == 'blue') ? true : false\n                    },\n                    children: ['Blue']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'light-blue',\n                        selected: (color && color == 'light-blue') ? true : false\n                    },\n                    children: ['Light Blue']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'teal',\n                        selected: (color && color == 'teal') ? true : false\n                    },\n                    children: ['Teal']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'cool-green',\n                        selected: (color && color == 'cool-green') ? true : false\n                    },\n                    children: ['Cool Green']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'warm-green',\n                        selected: (color && color == 'warm-green') ? true : false\n                    },\n                    children: ['Warm Green']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'purple',\n                        selected: (color && color == 'light-blue') ? true : false\n                    },\n                    children: ['Purple']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'violet',\n                        selected: (color && color == 'violet') ? true : false\n                    },\n                    children: ['Violet']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'light-blue',\n                        selected: (color && color == 'magenta') ? true : false\n                    },\n                    children: ['Magenta']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'gray',\n                        selected: (color && color == 'gray') ? true : false\n                    },\n                    children: ['Cool Gray']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'navy',\n                        selected: (color && color == 'navy') ? true : false\n                    },\n                    children: ['Navy']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'yellow',\n                        selected: (color && color == 'yellow') ? true : false\n                    },\n                    children: ['Yellow']\n                }),\n                new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template({\n                    tag: 'option',\n                    attributes: {\n                        value: 'dark-gray',\n                        selected: (color && color == 'dark-gray') ? true : false\n                    },\n                    children: ['Dark Gray']\n                })\n            ]\n        });\n  \n      this.saveButtonView = this._createButton( 'Save', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.check, 'ck-button-save' );\n      // Submit type of the button will trigger the submit event on entire form when clicked \n          // (see submitHandler() in render() below).\n      this.saveButtonView.type = 'submit';\n  \n      this.cancelButtonView = this._createButton( 'Cancel', ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.cancel, 'ck-button-cancel' );\n  \n      // Delegate ButtonView#execute to FormView#cancel\n      this.cancelButtonView.delegate( 'execute' ).to( this, 'cancel' );\n\n      this.setTemplate( {\n        tag: 'form',\n        attributes: {\n          class: [ 'ck', 'ck-ucsfcalloutbox-form', 'ck-reset_all-excluded' ],\n          tabindex: '-1'\n        },\n        children:  [\n            this.selectLabel,\n            this.select,\n            this.colorLabel,\n            this.color,\n            this.saveButtonView,\n            this.cancelButtonView\n        ],\n      } );\n    }\n  \n    render() {\n      super.render();\n  \n      // Submit the form when the user clicked the save button or pressed enter in the input.\n      (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.submitHandler)( {\n        view: this\n      } );\n    }\n\n    _createInput( label ) {\n      const labeledInput = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.LabeledFieldView( this.locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createLabeledInputText );\n  \n      labeledInput.label = label;\n  \n      return labeledInput;\n    }\n  \n    _createButton( label, icon, className ) {\n      const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n  \n      button.set( {\n        label,\n        icon,\n        tooltip: true,\n        class: className\n      } );\n  \n      return button;\n    }\n  }\n\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/./js/ckeditor5_plugins/ucsfquote/src/ucsfquoteview.js?")},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.ucsfquote/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/ucsfquote/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));