{"version":3,"sources":["ucsf-social-icons.js"],"names":["$","Drupal","behaviors","socialIconsMobile","attach","context","settings","window","once","each","$socialIcons","$iconPrint","has","lastScroll","hideAndShow","currentScroll","pageYOffset","removeClass","addClass","mobileDetect","event","matches","css","addEventListener","hasSocialNav","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","removeEventListener","observe","element","mql","matchMedia","addListener","jQuery"],"mappings":";;AAAA,CAAC,UAACA,CAAD,EAAO;AACNC,SAAOC,SAAP,CAAiBC,iBAAjB,GAAqC;AACnCC,YAAQ,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,QAAzB,EAAmC;AACzCN,QAAEO,MAAF,EAAUF,OAAV,EAAmBG,IAAnB,CAAwB,qBAAxB,EAA+CC,IAA/C,CAAoD,YAAY;;AAE9D,YAAMC,eAAeV,EAAE,qBAAF,EAAyBK,OAAzB,CAArB;AACA,YAAMM,aAAaX,EAAE,IAAF,EAAQK,OAAR,EAAiBO,GAAjB,CAAqB,0BAArB,CAAnB;AACA,YAAIC,aAAa,CAAjB;;AAEA;AACA,YAAMC,cAAc,SAAdA,WAAc,GAAM;AACxB,cAAMC,gBAAgBR,OAAOS,WAA7B;AACA,cAAID,gBAAgBF,UAApB,EAAgC;AAC9B;AACAH,yBAAaO,WAAb,CAAyB,YAAzB;AACD,WAHD,MAGO;AACL;AACAP,yBAAaQ,QAAb,CAAsB,YAAtB;AACD;;AAED;AACAL,uBAAaE,aAAb;AACD,SAZD;;AAcA;AACA,YAAMI,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACA,cAAIA,MAAMC,OAAV,EAAmB;AACjB;AACAV,uBAAWW,GAAX,CAAe,SAAf,EAA0B,MAA1B;AACAf,mBAAOgB,gBAAP,CAAwB,QAAxB,EAAkCT,WAAlC;;AAEA;AACA,aAAC,YAAY;AACX,kBAAI,0BAA0BP,MAA9B,EAAsC;AACpC;AACA,oBAAMiB,eAAeC,SAASC,gBAAT,CAA0B,qBAA1B,CAArB;;AAEA;AACA,oBAAMC,WAAW,IAAIC,oBAAJ,CAAyB,mBAAW;AACnDC,0BAAQC,OAAR,CAAgB,iBAAS;AACvB;AACA,wBAAIC,MAAMC,iBAAN,GAA0B,CAA9B,EAAiC;AAC/B;AACAzB,6BAAOgB,gBAAP,CAAwB,QAAxB,EAAkCT,WAAlC;AACD,qBAHD,MAGO;AACL;AACA;AACAJ,mCAAaO,WAAb,CAAyB,YAAzB;AACAV,6BAAO0B,mBAAP,CAA2B,QAA3B,EAAqCnB,WAArC;AACD;AACF,mBAXD;AAYD,iBAbgB,CAAjB;;AAeEU,6BAAaM,OAAb,CAAqB,mBAAW;AAChCH,2BAASO,OAAT,CAAiBC,OAAjB;AACD,iBAFC;AAGH;AAEF,aA1BD;;AA4BA;AACD,WAnCD,MAmCO;AACL5B,mBAAO0B,mBAAP,CAA2B,QAA3B,EAAqCnB,WAArC;AACA;AACAH,uBAAWW,GAAX,CAAe,SAAf,EAA0B,SAA1B;AACAZ,yBAAaO,WAAb,CAAyB,YAAzB;AACD;AACF,SA3CD;;AA6CA;AACA,YAAMmB,MAAMC,WAAW,qBAAX,CAAZ;AACA;AACAlB,qBAAaiB,GAAb;AACA;AACAA,YAAIE,WAAJ,CAAgBnB,YAAhB;AAED,OA1ED;AA2ED;AA7EkC,GAArC;AA+ED,CAhFD,EAgFGoB,MAhFH","file":"ucsf-social-icons.js","sourcesContent":["(($) => {\n  Drupal.behaviors.socialIconsMobile = {\n    attach: function attach(context, settings) {\n      $(window, context).once('social-icon-context').each(function () {\n\n        const $socialIcons = $('.article-meta-share', context);\n        const $iconPrint = $('li', context).has('a[title=\"Print Article\"]');\n        let lastScroll = 0;\n\n        // Custom Social Navbar behavior for mobile\n        const hideAndShow = () => {\n          const currentScroll = window.pageYOffset;\n          if (currentScroll > lastScroll) {\n            // If scrolling down hide icons\n            $socialIcons.removeClass('is-visible');\n          } else {\n            // If scrolling up show icons\n            $socialIcons.addClass('is-visible');\n          }\n\n          // Update scroll value\n          lastScroll = currentScroll;\n        };\n\n        // Only use custom Social Navbar up scroll behavior in mobile\n        const mobileDetect = (event) => {\n          // Mobile\n          if (event.matches) {\n            // Remove \"print\" icon\n            $iconPrint.css('display', 'none');\n            window.addEventListener('scroll', hideAndShow);\n\n            // Social Navbar should not appear if article is not in viewport.\n            (function () {\n              if ('IntersectionObserver' in window) {\n                // Elements where Social Navbar should be visible\n                const hasSocialNav = document.querySelectorAll('#block-ucsf-content');\n\n                // Determine if element with Social Navbar is in viewport\n                const observer = new IntersectionObserver(entries => {\n                  entries.forEach(entry => {\n                    // Element with Social Navbar is in viewport\n                    if (entry.intersectionRatio > 0) {\n                      // show icons on up scroll\n                      window.addEventListener('scroll', hideAndShow);\n                    } else {\n                      // Element with Social Navbar is not in viewport\n                      // hide icons and don't trigger the up scroll event.\n                      $socialIcons.removeClass('is-visible');\n                      window.removeEventListener('scroll', hideAndShow);\n                    }\n                  })\n                })\n\n                  hasSocialNav.forEach(element => {\n                  observer.observe(element);\n                });\n              }\n\n            })();\n\n            // Desktop\n          } else {\n            window.removeEventListener('scroll', hideAndShow);\n            // Add \"print\" icon\n            $iconPrint.css('display', 'initial');\n            $socialIcons.removeClass('is-visible');\n          }\n        };\n\n        // Use MatchMedia to ensure that Social Navbar upscroll is only happening in mobile\n        const mql = matchMedia('(max-width: 1049px)');\n        // Detect mobile on page load.\n        mobileDetect(mql);\n        // Watch to see if the page size changes.\n        mql.addListener(mobileDetect);\n\n      });\n    }\n  };\n})(jQuery);\n"]}