{"version":3,"sources":["ucsf_element_slide.js"],"names":["window","quote","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","target","classList","add","unobserve","observe","element"],"mappings":";;AAAA;;;;;AAKA,CAAC,YAAY;AACX,MAAI,0BAA0BA,MAA9B,EAAsC;AACpC;AACA,QAAMC,QAAQC,SAASC,gBAAT,CAA0B,gFAA1B,CAAd;;AAEA,QAAMC,WAAW,IAAIC,oBAAJ,CAAyB,mBAAW;AACnDC,cAAQC,OAAR,CAAgB,iBAAS;;AAEvB,YAAIC,MAAMC,iBAAN,GAA0B,CAA9B,EAAiC;AAC/B;AACAD,gBAAME,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,aAA3B;AACAR,mBAASS,SAAT,CAAmBL,MAAME,MAAzB;AACD;AACF,OAPD;AAQD,KATgB,CAAjB;;AAWAT,UAAMM,OAAN,CAAc,mBAAW;AACvBH,eAASU,OAAT,CAAiBC,OAAjB;AACD,KAFD;AAGD;AAEF,CArBD","file":"ucsf_element_slide.js","sourcesContent":["/**\n * Slide in callout boxes and blockquotes from right or left based on location\n * in the viewport.\n */\n\n(function () {\n  if ('IntersectionObserver' in window) {\n    // element to be animated\n    const quote = document.querySelectorAll('.blockquote--half-right, .blockquote--half-left, .callout-right, .callout-left');\n\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n\n        if (entry.intersectionRatio > 0) {\n          // adds the class responsible for animation on the first viewport appearance\n          entry.target.classList.add('in-viewport');\n          observer.unobserve(entry.target);\n        }\n      })\n    })\n\n    quote.forEach(element => {\n      observer.observe(element);\n    });\n  }\n\n})();\n"]}