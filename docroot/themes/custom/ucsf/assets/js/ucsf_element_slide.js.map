{"version":3,"sources":["ucsf_element_slide.js"],"names":["quote","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","target","classList","add","unobserve","observe","element"],"mappings":";;AAAA;;;;;AAKA,CAAC,YAAY;AACX;AACA,MAAMA,QAAQC,SAASC,gBAAT,CAA0B,gFAA1B,CAAd;;AAEA,MAAMC,WAAW,IAAIC,oBAAJ,CAAyB,mBAAW;AACnDC,YAAQC,OAAR,CAAgB,iBAAS;;AAEvB,UAAIC,MAAMC,iBAAN,GAA0B,CAA9B,EAAiC;AAC/B;AACAD,cAAME,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,aAA3B;AACAR,iBAASS,SAAT,CAAmBL,MAAME,MAAzB;AACD;AACF,KAPD;AAQD,GATgB,CAAjB;;AAWAT,QAAMM,OAAN,CAAc,mBAAW;AACvBH,aAASU,OAAT,CAAiBC,OAAjB;AACD,GAFD;AAGD,CAlBD","file":"ucsf_element_slide.js","sourcesContent":["/**\n * Slide in callout boxes and blockquotes from right or left based on location\n * in the viewport.\n */\n\n(function () {\n  // element to be animated\n  const quote = document.querySelectorAll('.blockquote--half-right, .blockquote--half-left, .callout-right, .callout-left');\n\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n\n      if (entry.intersectionRatio > 0) {\n        // adds the class responsible for animation on the first viewport appearance\n        entry.target.classList.add('in-viewport');\n        observer.unobserve(entry.target);\n      }\n    })\n  })\n\n  quote.forEach(element => {\n    observer.observe(element);\n  });\n})();\n"]}