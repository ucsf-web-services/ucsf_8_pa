{"version":3,"sources":["ucsf_quicklinks.js"],"names":["$","once","quicklinksNav","document","ready","setTimeout","removeClass","Drupal","behaviors","quicklinks","attach","context","$quicklinks","$triggerToggle","$triggerClose","$quicklinksTriggers","selectorsArr","setAria","value","forEach","trigger","attr","setVisibility","visibility","selector","toggleClass","addClass","click","e","console","log","preventDefault","on","activeElement","body","closest","mql","matchMedia","matches","jQuery"],"mappings":";;AAAA;AACA,CAAC,UAAUA,CAAV,EAAaC,IAAb,EAAmB;AAClB,MAAMC,gBAAgB,SAAhBA,aAAgB,GAAM;AAC1BF,MAAEG,QAAF,EAAYC,KAAZ,CAAkB,YAAY;AAC5BC,iBAAW,YAAY;AACrBL,UAAE,MAAF,EAAUM,WAAV,CAAsB,SAAtB,EADqB,CACa;AACnC,OAFD,EAEG,IAFH;AAGD,KAJD;;AAMAC,WAAOC,SAAP,CAAiBC,UAAjB,GAA8B;AAC5BC,cAAQ,gBAAUC,OAAV,EAAmB;AACzB,YAAMC,cAAcZ,EAAE,aAAF,EAAiBW,OAAjB,CAApB;AACA,YAAME,iBAAiBb,EAAEC,KAAK,eAAL,EAAqB,qBAArB,EAA4CU,OAA5C,CAAF,CAAvB;AACA,YAAMG,gBAAgBd,EAAE,mBAAF,EAAuBW,OAAvB,CAAtB;AACA,YAAMI,sBAAsB,CAAEF,cAAF,EAAkBC,aAAlB,CAA5B;AACA,YAAME,eAAe,CAAEJ,WAAF,EAAeZ,EAAE,gBAAF,EAAoBW,OAApB,CAAf,CAArB;;AAEA;;;;AAIA,YAAMM,UAAU,SAAVA,OAAU,CAAEC,KAAF,EAAa;AAC3BH,8BAAoBI,OAApB,CAA4B;AAAA,mBAAWC,QAAQC,IAAR,CAAa,eAAb,EAA8BH,KAA9B,CAAX;AAAA,WAA5B;AACD,SAFD;;AAIA;;;;;AAKA,YAAMI,gBAAgB,SAAhBA,aAAgB,CAAEC,UAAF,EAAkB;AACtCP,uBAAaG,OAAb,CAAqB,oBAAY;AAC/B,gBAAII,eAAe,QAAnB,EAA6B;AAC3BC,uBAASC,WAAT,CAAqB,oBAArB;AACD,iBAAIF,eAAe,MAAnB,EAA2B;AAC1BC,uBAASE,QAAT,CAAkB,oBAAlB;AACD;AACD,gBAAIH,eAAe,MAAnB,EAA2B;AACzBC,uBAASlB,WAAT,CAAqB,oBAArB;AACD;AACF,WATD;AAUD,SAXD;;AAcA;AACAO,uBAAec,KAAf,CAAqB,UAACC,CAAD,EAAO;AAC1BC,kBAAQC,GAAR,CAAY,SAAZ;AACAF,YAAEG,cAAF;AACAT,wBAAc,QAAd;;AAEA;AACA,cAAIT,eAAeQ,IAAf,CAAoB,eAApB,MAAyC,MAA7C,EAAqD;AACnDJ,oBAAQ,OAAR;AACD,WAFD,MAEO;AACLA,oBAAQ,MAAR;AACD;AACF,SAXD;;AAaA;AACAH,sBAAca,KAAd,CAAoB,UAAUC,CAAV,EAAa;AAC/BA,YAAEG,cAAF;AACA;AACAT,wBAAc,MAAd;AACAL,kBAAQ,OAAR;AACD,SALD;;AAQA;AACAjB,UAAE,kBAAF,EAAsBW,OAAtB,EAA+BqB,EAA/B,CAAkC,SAAlC,EAA6C,YAAW;AACtDV,wBAAe,MAAf;AACAL,kBAAQ,MAAR;AACD,SAHD;;AAKA;AACAL,oBAAYoB,EAAZ,CAAe,UAAf,EAA2B,YAAW;AACpC;AACA3B,qBAAW,YAAY;AACrB,gBAAIF,SAAS8B,aAAT,KAA2B9B,SAAS+B,IAApC,IAA4C/B,SAAS8B,aAAT,KAA2B,IAA3E,EAAiF;AAC/E;AACD;AACD,gBAAI9B,SAAS8B,aAAT,CAAuBE,OAAvB,CAA+B,aAA/B,MAAkD,IAAtD,EAA4D;AAC1Db,4BAAc,MAAd;AACAL,sBAAQ,OAAR;AACD;AACF,WARD,EAQG,GARH;AASD,SAXD;AAYD;AA7E2B,KAA9B;AA+ED,GAtFD;;AAwFA;AACA,MAAMmB,MAAMC,WAAW,oBAAX,CAAZ;AACA;AACA,MAAID,IAAIE,OAAR,EAAiB;AACfpC;AACD;AACF,CA/FD,EA+FGqC,MA/FH,EA+FWtC,IA/FX","file":"ucsf_quicklinks.js","sourcesContent":["/* eslint-disable */\n(function ($, once) {\n  const quicklinksNav = () => {\n    $(document).ready(function () {\n      setTimeout(function () {\n        $(\"body\").removeClass(\"loading\"); // 'quicklinks-intro' CSS animation breaks if class is removed before animation is finished.\n      }, 5000);\n    });\n\n    Drupal.behaviors.quicklinks = {\n      attach: function (context) {\n        const $quicklinks = $(\".quicklinks\", context);\n        const $triggerToggle = $(once(\"triggerToggle\",\".quicklinks-trigger\", context));\n        const $triggerClose = $(\".quicklinks-close\", context);\n        const $quicklinksTriggers = [ $triggerToggle, $triggerClose];\n        const selectorsArr = [ $quicklinks, $(\".header-region\", context) ];\n\n        /**\n         * Set aria-expanded attribute value on element that triggers the quicklinks visibility\n         * @param {String} value\n         */\n        const setAria = ( value ) => {\n          $quicklinksTriggers.forEach(trigger => trigger.attr(\"aria-expanded\", value));\n        }\n\n        /**\n         * Set visibility of the quicklinks panel\n         * @param {String} visibility\n         * Indicator for how to use classes responsible for quicklinks visibility.\n         */\n        const setVisibility = ( visibility ) => {\n          selectorsArr.forEach(selector => {\n            if (visibility === \"toggle\") {\n              selector.toggleClass(\"js-quicklinks-open\");\n            }if (visibility === \"show\") {\n              selector.addClass(\"js-quicklinks-open\");\n            }\n            if (visibility === \"hide\") {\n              selector.removeClass(\"js-quicklinks-open\");\n            }\n          });\n        };\n\n\n        // Toggle visibility of the quicklinks panel\n        $triggerToggle.click((e) => {\n          console.log('made it')\n          e.preventDefault();\n          setVisibility(\"toggle\" );\n\n          // Set aria attribute.\n          if ($triggerToggle.attr(\"aria-expanded\") === \"true\") {\n            setAria(\"false\");\n          } else {\n            setAria(\"true\");\n          }\n        });\n\n        // Hide quicklinks panel\n        $triggerClose.click(function (e) {\n          e.preventDefault();\n          // Hide quicklinks\n          setVisibility(\"hide\");\n          setAria(\"false\");\n        });\n\n\n        // Show quicklinks panel when user is tabbing through it\n        $(\".quicklinks-menu\", context).on('focusin', function() {\n          setVisibility( \"show\" );\n          setAria(\"true\");\n        });\n\n        // Hide quicklinks panel when focus is out\n        $quicklinks.on('focusout', function() {\n          // Waits and only removes class if newly focused element is outside the quicklinks\n          setTimeout(function () {\n            if (document.activeElement === document.body || document.activeElement === null) {\n              return;\n            }\n            if (document.activeElement.closest(\".quicklinks\") === null) {\n              setVisibility(\"hide\");\n              setAria(\"false\");\n            }\n          }, 150);\n        });\n      },\n    };\n  }\n\n  // Use MatchMedia to ensure that events are only happening in Tablet/Desktop\n  const mql = matchMedia('(min-width: 769px)');\n  // On page load, check if desktop.\n  if (mql.matches) {\n    quicklinksNav();\n  }\n})(jQuery, once);\n"]}