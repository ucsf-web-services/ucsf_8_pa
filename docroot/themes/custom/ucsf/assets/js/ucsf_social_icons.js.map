{"version":3,"sources":["ucsf_social_icons.js"],"names":["$","Drupal","behaviors","socialIconsMobile","attach","context","settings","window","once","each","$socialIcons","$iconPrint","has","lastScroll","hideAndShow","currentScroll","pageYOffset","removeClass","addClass","articleDetect","hasSocialNav","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","addEventListener","removeEventListener","observe","element","mobileDetect","event","matches","css","mql","matchMedia","addListener","jQuery"],"mappings":";;AAAA,CAAC,UAACA,CAAD,EAAO;AACN;AACAC,SAAOC,SAAP,CAAiBC,iBAAjB,GAAqC;AACnCC,YAAQ,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,QAAzB,EAAmC;AACzCN,QAAEO,MAAF,EAAUF,OAAV,EAAmBG,IAAnB,CAAwB,qBAAxB,EAA+CC,IAA/C,CAAoD,YAAY;AAC9D,YAAMC,eAAeV,EAAE,qBAAF,EAAyBK,OAAzB,CAArB;AACA,YAAMM,aAAaX,EAAE,IAAF,EAAQK,OAAR,EAAiBO,GAAjB,CAAqB,mBAArB,CAAnB;AACA,YAAIC,aAAa,CAAjB;;AAEA;AACA,YAAMC,cAAc,SAAdA,WAAc,GAAM;AACxB,cAAMC,gBAAgBR,OAAOS,WAA7B;AACA,cAAID,gBAAgBF,UAApB,EAAgC;AAC9B;AACAH,yBAAaO,WAAb,CAAyB,YAAzB;AACD,WAHD,MAGO;AACL;AACAP,yBAAaQ,QAAb,CAAsB,YAAtB;AACD;;AAED;AACAL,uBAAaE,aAAb;AACD,SAZD;;AAcA;AACA,YAAOI,gBAAgB,SAAhBA,aAAgB,GAAM;AAC3B,cAAI,0BAA0BZ,MAA9B,EAAsC;AACpC;AACA,gBAAMa,eAAeC,SAASC,gBAAT,CAA0B,0BAA1B,CAArB;;AAEA,gBAAMC,WAAW,IAAIC,oBAAJ,CAAyB,mBAAW;AACnDC,sBAAQC,OAAR,CAAgB,iBAAS;AACvB;AACA,oBAAIC,MAAMC,iBAAN,GAA0B,CAA9B,EAAiC;AAC/B;AACArB,yBAAOsB,gBAAP,CAAwB,QAAxB,EAAkCf,WAAlC;AACD,iBAHD,MAGO;AACL;AACA;AACAJ,+BAAaO,WAAb,CAAyB,YAAzB;AACAV,yBAAOuB,mBAAP,CAA2B,QAA3B,EAAqChB,WAArC;AACD;AACF,eAXD;AAYD,aAbgB,CAAjB;;AAeA;AACAM,yBAAaM,OAAb,CAAqB,mBAAW;AAC9BH,uBAASQ,OAAT,CAAiBC,OAAjB;AACD,aAFD;AAGD;AACF,SAzBD;;AA2BA;AACA,YAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACA,cAAIA,MAAMC,OAAV,EAAmB;AACjB;AACAxB,uBAAWyB,GAAX,CAAe,SAAf,EAA0B,MAA1B;AACA7B,mBAAOsB,gBAAP,CAAwB,QAAxB,EAAkCf,WAAlC;AACAK;;AAEA;AACD,WAPD,MAOO;AACLZ,mBAAOuB,mBAAP,CAA2B,QAA3B,EAAqChB,WAArC;AACA;AACAH,uBAAWyB,GAAX,CAAe,SAAf,EAA0B,SAA1B;AACA1B,yBAAaO,WAAb,CAAyB,YAAzB;AACD;AACF,SAfD;;AAiBA;AACA,YAAMoB,MAAMC,WAAW,qBAAX,CAAZ;AACA;AACAL,qBAAaI,GAAb;AACA;AACAA,YAAIE,WAAJ,CAAgBN,YAAhB;AAED,OAzED;AA0ED;AA5EkC,GAArC;AA8ED,CAhFD,EAgFGO,MAhFH","file":"ucsf_social_icons.js","sourcesContent":["(($) => {\n  // All of this code is used for small screen:\n  Drupal.behaviors.socialIconsMobile = {\n    attach: function attach(context, settings) {\n      $(window, context).once('social-icon-context').each(function () {\n        const $socialIcons = $('.article-meta-share', context);\n        const $iconPrint = $('li', context).has('a[title*=\"Print\"]');\n        let lastScroll = 0;\n\n        // Social Navbar behavior\n        const hideAndShow = () => {\n          const currentScroll = window.pageYOffset;\n          if (currentScroll > lastScroll) {\n            // If scrolling down, hide icons\n            $socialIcons.removeClass('is-visible');\n          } else {\n            // If scrolling up, show icons\n            $socialIcons.addClass('is-visible');\n          }\n\n          // Update scroll value\n          lastScroll = currentScroll;\n        };\n\n        // Detect if article is not in viewport.\n        const  articleDetect = () => {\n          if ('IntersectionObserver' in window) {\n            // Article content wrapper\n            const hasSocialNav = document.querySelectorAll('.block-system-main-block');\n\n            const observer = new IntersectionObserver(entries => {\n              entries.forEach(entry => {\n                // Article content is in viewport\n                if (entry.intersectionRatio > 0) {\n                  // show icons on up scroll\n                  window.addEventListener('scroll', hideAndShow);\n                } else {\n                  // Article content is not in viewport\n                  // hide icons and don't trigger the up scroll event.\n                  $socialIcons.removeClass('is-visible');\n                  window.removeEventListener('scroll', hideAndShow);\n                }\n              })\n            })\n\n            // Check if specified element is in viewport\n            hasSocialNav.forEach(element => {\n              observer.observe(element);\n            });\n          }\n        };\n\n        // Only use custom Social Navbar up scroll behavior in mobile\n        const mobileDetect = (event) => {\n          // Mobile\n          if (event.matches) {\n            // Remove \"print\" icon\n            $iconPrint.css('display', 'none');\n            window.addEventListener('scroll', hideAndShow);\n            articleDetect();\n\n            // Desktop\n          } else {\n            window.removeEventListener('scroll', hideAndShow);\n            // Add \"print\" icon\n            $iconPrint.css('display', 'initial');\n            $socialIcons.removeClass('is-visible');\n          }\n        };\n\n        // Use MatchMedia breakpoint to trigger small screen behavior and reset behavior for Desktop.\n        const mql = matchMedia('(max-width: 1049px)');\n        // Detect mobile on page load.\n        mobileDetect(mql);\n        // Watch to see if the page size changes.\n        mql.addListener(mobileDetect);\n\n      });\n    }\n  };\n})(jQuery);\n"]}