/*------------------------------------*\
  # Aligned Image / Video Embeds
\*------------------------------------*/
// Moved the logic for aligning images here from _node-article.scss

// HALF IMAGE, HALF IMAGE CAPTION
// HALF IMAGE FULL, HALF IMAGE FULL CAPTION
// ALIGN-LEFT, ALIGN-RIGHT
// LEGACY ALIGNMENT (.ckgreybox, .ckimagebox, image-2014_inline_5-col, .image-2014_inline_5-col)
// FULL WIDTH ELEMENTS

// !DO NOT add other options it will break css.
// $option - should be either "left" or "right",  they are used to create selectors and css declarations.
$align-options: left, right;

// Code for wrapper of image or video.
// Span element full width of the screen
%wrapper-full-width-small-screen {
  margin-top: 0;
  margin-left: -#{$article-gutter};
  margin-right: -#{$article-gutter};
  margin-bottom: $space-quadruple;
  // float: left;
  display: table;
  width: calc(100% + (#{$article-gutter} * 2));
}

/*---------------In this section---------------------*\
  HALF IMAGE, HALF IMAGE with CAPTION
\*---------------------------------------------------*/
// These can technically have video as well as images.
@each $direction in $align-options {
  .half-image-#{$direction} {
    // @extend %wrapper-full-width-small-screen;
    margin-top: 0;
    margin-left: -#{$article-gutter};
    margin-right: -#{$article-gutter};
    margin-bottom: $space-quadruple;
    display: table;
    width: calc(100% + ($article-gutter * 2));

    clear: both;

    @include breakpoint($new-small) {
      max-width: 50%;
      width: 100%;
      float: $direction;
      clear: $direction;

      @if $direction == left {
        margin-right: $space-decuple;
        margin-left: -#{$article-gutter-bp-new-small};
      } @else {
        margin-right: -#{$article-gutter-bp-new-small};
        margin-left: $space-decuple;
      }
    }

    @include breakpoint($new-large) {
      max-width: 55%;
      margin-#{$direction}: -20%;
    }

    @include breakpoint($new-xl) {
      max-width: 480px;
      margin-#{$direction}: -25%;
    }

    img {
      // Force the image to fill the screen width in mobile.
      width: 100vw;
    }

    figcaption {
      padding-top: $space-double;
      padding-right: $article-gutter;
      padding-left: $article-gutter;

      @include breakpoint($new-small) {
        @if $direction == left {
          padding-right: 0;
          padding-left: 29%;
          text-align: right;
        } @else {
          padding-right: 29%;
          padding-left: 0;
        }
      }

      @include breakpoint($new-large) {
        padding-#{$direction}: 37%;
      }

      @include breakpoint($new-xl) {
        padding-#{$direction}: 42.5%;
      }
    }
  }
}

/*---------------In this section---------------------*\
  HALF IMAGE FULL, HALF IMAGE FULL CAPTION
\*---------------------------------------------------*/
// Read comments for IMAGE FULL section
// half-image-#{$option}-full, could be image or video. Indicates the width of element not the type.
@each $option in $align-options {

  // HALF IMAGE FULL
  .embedded-entity.half-image-#{$option}-full,
  .caption-drupal-entity.half-image-#{$option}-full {
    @extend %wrapper-full-width-small-screen;

    @include breakpoint($new-small) {
      margin-left: -#{$article-gutter-bp-new-small};
      margin-right: $space-decuple;
      margin-bottom: $space-quadruple;
      width: 100%;
      max-width: 55%;
      float: #{$option};
      clear: #{$option};

      @if $option == right {
        margin-right: -#{$article-gutter-bp-new-small};
        margin-left: $space-decuple;
      }
    }

    // $option is passed to the css declaration to keep code DRY for 'left' and 'right' variant.
    @include breakpoint($new-small) {
      margin-#{$option}: -#{$article-gutter-bp-new-small};
      max-width: 55%;
    }

    @include breakpoint($new-large) {
      margin-#{$option}: -24%;
      max-width: 75%; // This value determines the size of images and videos
    }

    @include breakpoint($new-xl) {
      margin-#{$option}: -37%;
      max-width: 680px; // This value determines the size of images and videos
    }

    & + * {
      clear: both;

      @include breakpoint($new-small) {
        clear: none;
      }
    }

    img {
      // Force the image to fill the screen width in mobile.
      width: 100vw;
    }


    // HALF IMAGE FULL CAPTION
    & figcaption {
      float: left;
      padding-left: $article-gutter;
      padding-right: $article-gutter;

      @include breakpoint($new-small) {
        float: right;
        padding-right: 0;
      }

      // Overwriting the default for right aligned elements
      @if $option == right {
        @include breakpoint($new-small) {
          float: left;
          padding-left: 0;
        }
      }

      // $option is passed to the css declaration to keep code DRY for 'left' and 'right' variant.
      @include breakpoint($new-small) {
        padding-#{$option}: 26%;
      }

      @include breakpoint($new-large) {
        padding-#{$option}: 32%;
      }

      @include breakpoint($new-xl) {
        padding-#{$option}: 44%;
      }
    }
  }
}


/*---------------In this section---------------------*\
  ALIGN-LEFT, ALIGN-RIGHT
\*---------------------------------------------------*/
// Used in mostly for portraits:

@each $option in $align-options {
  // ALIGN-LEFT, ALIGN-RIGHT
  .embedded-entity.align-#{$option},
  .caption-drupal-entity.align-#{$option} {
    margin-top: 0;
    margin-bottom: $space-quadruple;
    float: left;
    display: table;
    width: 100%;

    @include breakpoint($new-small) {
      display: table;
      width: initial;
      margin-right: $space-five;

      // Overwriting the default for right aligned elements
      @if $option == right {
        float: #{$option};
        margin-right: 0;
        margin-left: $space-five;
      }
    }

    figcaption {
      display:table-caption;
      caption-side:bottom;
    }

    img {
      width: 100%;
    }
  }
}
