@use "../0_tools" as *;
$callout-offsetX: 14%;

// Callout corner image
$callout-image-size: 100px;
$callout-image-size-large: 150px;
$callout-image-offsetX-small: 3.5rem;
$callout-image-offsetX-medium: $callout-offsetX;

.ucsfcallout {
  background: $i6-gray;
  margin: 10%;
  margin-top: 0;
  margin-bottom: $space-quadruple;
  width: calc(100% + 20px);
  padding: $space-five;

  .callout-left__title,
  .callout__title h3,
  .eyebrow-title {
    @include eyebrow;
  }

  p:last-child {
    margin-bottom: 0;
  }

  @include breakpoint($new-small) {
    width: 50%;
    padding: 80px 10%;
  }

  // Callout box has corner image
  &[data-image="1"] {
    margin-top: 3rem;

    @include breakpoint($new-large) {
      margin-top: 5rem;
    }
  }

  .link--cta {
    @include link-bg-image-hover();

    &:hover {
      padding-right: $space-three;
    }
  }
}

@each $direction in $align-directions {
  .callout-#{$direction} {
    float: $direction;
    margin-#{$direction}: -20px;
    padding-#{$direction}: 6%;

    @include breakpoint($new-small) {
      margin-#{$direction}: -$callout-offsetX;
    }

    @include breakpoint($new-large) {
      margin-#{$direction}: -20%;
    }

    @if $direction == left {
      @include breakpoint($new-small-max) {
        margin-right: 0;
      }

      @include breakpoint($new-small) {
        &.in-viewport {
          animation: element-slide-right 1.3s cubic-bezier(0.77, 0, 0.175, 1) 0ms forwards;
        }
      }

    } @else {
      @include breakpoint($new-small-max) {
        margin-left: 0;
      }

      @include breakpoint($new-small) {
        &.in-viewport {
          animation: element-slide-left 1.3s cubic-bezier(0.77, 0, 0.175, 1) 0ms forwards;
        }
      }
    }
  }
}

.callout__image {
  width: $callout-image-size;
  height: $callout-image-size;
  overflow: hidden;
  margin-bottom: 2rem;
  margin-top: -5rem;

  @include breakpoint($bp-medium) {
    width: $callout-image-size-large;
    height: $callout-image-size-large;
    margin-top: -8rem;
  }

  @include breakpoint($new-large) {
    margin-top: -10rem;
  }

  .embedded-entity {
    margin: 0;
  }

  img {
    width: $callout-image-size;
    height: $callout-image-size;
    object-fit: cover;

    @include breakpoint($bp-medium) {
      width: $callout-image-size-large;
      height: $callout-image-size-large;
    }
  }

  @each $direction in $align-directions {
    .callout-#{$direction} & {

      @include breakpoint($new-small) {
        margin-#{$direction}: -$callout-offsetX;
      }

      @include breakpoint($new-large) {
        margin-right: 0;
        margin-left: 0;
      }

      @if $direction == left {
        float: right;
        margin-right: -$callout-image-offsetX-small;

        @include breakpoint($new-small) {
          float: none;
        }

        @include breakpoint($new-large) {
          transform: translateX(-50%);
        }
      } @else { // right aligned component
        float: left;
        margin-left: -$callout-image-offsetX-small;

        @include breakpoint($new-small) {
          margin-left: 0;
          float: right;
        }

        @include breakpoint($new-large) {
          transform: translateX(50%);
        }
      }
    }
  }
}

.callout__content {
  clear: both;
}

.hidden {
  display: none;
  line-height: 0;
}
