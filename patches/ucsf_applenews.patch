diff --git a/docroot/modules/custom/ucsf_applenews/src/Normalizer/UcsfApplenewsContentEntityNormalizer.php b/docroot/modules/custom/ucsf_applenews/src/Normalizer/UcsfApplenewsContentEntityNormalizer.php
new file mode 100644
index 000000000..df2d85d53
--- /dev/null
+++ b/docroot/modules/custom/ucsf_applenews/src/Normalizer/UcsfApplenewsContentEntityNormalizer.php
@@ -0,0 +1,82 @@
+<?php
+
+namespace Drupal\ucsf_applenews\Normalizer;
+
+use Drupal\applenews\Normalizer\ApplenewsContentEntityNormalizer;
+use ChapterThree\AppleNewsAPI\Document\Layouts\Layout;
+use ChapterThree\AppleNewsAPI\Document;
+use ChapterThree\AppleNewsAPI\Document\Metadata;
+use Drupal\Core\Language\LanguageInterface;
+use ChapterThree\AppleNewsAPI\Document\Components\Component;
+use Drupal\node\Entity\Node;
+
+/**
+ * Override ApplenewsContentEntityNormalizer for UCSF exports.
+ */
+class UcsfApplenewsContentEntityNormalizer extends ApplenewsContentEntityNormalizer {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function normalize($data, $format = NULL, array $context = []) {
+    // @todo check cache
+    $template = $this->entityTypeManager->getStorage('applenews_template')
+      ->load($context['template_id']);
+    $layout = new Layout($template->columns, $template->width);
+    $langcode = $data->language()->getId();
+    // If language is not specified , fallback to site default.
+    if ($langcode == LanguageInterface::LANGCODE_NOT_SPECIFIED) {
+      $langcode = \Drupal::languageManager()->getDefaultLanguage()->getId();
+    }
+    $layout
+      ->setMargin($template->margin)
+      ->setGutter($template->gutter);
+    $document = new Document($data->uuid(), $data->getTitle(), $langcode, $layout);
+
+    // Customized to add metadata.
+    $metadata = new Metadata();
+    if ($data instanceof Node) {
+      $info = system_get_info('module', 'applenews');
+      $version = $info['core'] ?? '';
+      if (!empty($info['version'])) {
+        $version .= '-' . $info['version'];
+      }
+      $metadata
+        ->setCanonicalURL($data->toUrl()->setAbsolute()->toString())
+        ->setDateCreated(date('c', $data->getCreatedTime()))
+        ->setDateModified(date('c', $data->getChangedTime()))
+        ->setGeneratorIdentifier('DrupalAppleNews')
+        ->setGeneratorName('Apple News Drupal Module')
+        ->setGeneratorIdentifier($version);
+    }
+    $document->setMetadata($metadata);
+    // End customization.
+
+    $context['entity'] = $data;
+    foreach ($template->getComponents() as $component) {
+      $normalized = $this->serializer->normalize($component, $format, $context);
+      if (!$normalized) {
+        continue;
+      }
+      elseif ($normalized instanceof Component) {
+        $normalized = [$normalized];
+      }
+
+      foreach ($normalized as $normalized_component) {
+        if ($normalized_component instanceof Component) {
+          $document->addComponent($normalized_component);
+        }
+      }
+    }
+
+    // @todo: Load only default and used custom styles.
+    $text_styles = $this->entityTypeManager->getStorage('applenews_text_style')
+      ->loadMultiple();
+    foreach ($text_styles as $id => $text_style) {
+      /** @var \Drupal\applenews\Entity\ApplenewsTextStyle $text_style */
+      $document->addTextStyle($text_style->id(), $text_style->toObject());
+    }
+    return $document->jsonSerialize();
+  }
+
+}
diff --git a/docroot/modules/custom/ucsf_applenews/src/Normalizer/UcsfApplenewsTextComponentNormalizer.php b/docroot/modules/custom/ucsf_applenews/src/Normalizer/UcsfApplenewsTextComponentNormalizer.php
new file mode 100644
index 000000000..0a5861996
--- /dev/null
+++ b/docroot/modules/custom/ucsf_applenews/src/Normalizer/UcsfApplenewsTextComponentNormalizer.php
@@ -0,0 +1,172 @@
+<?php
+
+namespace Drupal\ucsf_applenews\Normalizer;
+
+use ChapterThree\AppleNewsAPI\Document\Components\Author;
+use ChapterThree\AppleNewsAPI\Document\Components\Body;
+use ChapterThree\AppleNewsAPI\Document\Components\Photo;
+use ChapterThree\AppleNewsAPI\Document\Margin;
+use ChapterThree\AppleNewsAPI\Document\Styles\ComponentTextStyle;
+use ChapterThree\AppleNewsAPI\Document\Styles\TextStyle;
+use Drupal\applenews\Normalizer\ApplenewsTextComponentNormalizer;
+use Drupal\Core\TypedData\Exception\MissingDataException;
+use Drupal\Core\Url;
+use Symfony\Component\Serializer\Exception\NotNormalizableValueException;
+
+/**
+ * Override ApplenewsTextComponentNormalizer for UCSF exports.
+ */
+class UcsfApplenewsTextComponentNormalizer extends ApplenewsTextComponentNormalizer {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function normalize($data, $format = NULL, array $context = []) {
+
+    if ($data['id'] == 'default_text:author' &&
+      isset($data['component_data']['text']['field_name']) &&
+      $data['component_data']['text']['field_name'] == 'field_author'
+    ) {
+      return $this->normalizeNewsAuthor($data, $format, $context);
+    }
+
+    if ($data['id'] == 'default_text:body' &&
+      isset($data['component_data']['text']['field_name']) &&
+      $data['component_data']['text']['field_name'] == 'body'
+    ) {
+      return $this->normalizeBody($data, $format, $context);
+    }
+
+    return parent::normalize($data, $format, $context);
+  }
+
+  /**
+   * Body.
+   */
+  protected function normalizeBody($data, $format = NULL, array $context = []) {
+    $components = [];
+
+    /** @var \Drupal\node\Entity\Node $entity */
+    $entity = $context['entity'];
+
+    $field_name = $data['component_data']['text']['field_name'];
+    $context['field_property'] = $data['component_data']['text']['field_property'];
+    $text = $this->serializer->normalize($entity->get($field_name), $format, $context);
+
+    // Add first img as photo component.
+    $doc = new \DOMDocument();
+    if (!$doc->loadHTML($text)) {
+      throw new NotNormalizableValueException('Could not parse body HTML.');
+    }
+    $xp = new \DOMXPath($doc);
+    /** @var \DOMElement $img */
+    foreach ($xp->query('//img') as $img) {
+      if (!$img->hasAttribute('src')) {
+        continue;
+      }
+      if (!$url = $img->getAttribute('src')) {
+        continue;
+      }
+      $url = Url::fromUserInput($url, ['absolute' => TRUE])->toString();
+      $components['img'] = new Photo($url);
+      $layout = $this->getComponentLayout($data['component_layout']);
+      $layout
+        ->setIgnoreDocumentGutter('both')
+        ->setIgnoreDocumentMargin('both')
+        ->setMargin(new Margin(15, 15));
+      $components['img']->setLayout($layout);
+      break;
+    }
+
+    $text = strip_tags($text, self::ALLOWED_HTML_ELEMENTS);
+    $components['body'] = new Body($text);
+
+    // Text style.
+    $link_style = new TextStyle();
+    $link_style
+      ->setFontName('HelveticaNeue-Medium')
+      ->setFontSize(18)
+      ->setTextColor('#0071AD')
+      ->setUnderline(FALSE);
+    $style = new ComponentTextStyle();
+    $style
+      ->setFontName('HelveticaNeue')
+      ->setFontSize(18)
+      ->setHyphenation(FALSE)
+      ->setLineHeight(26)
+      ->setLinkStyle($link_style)
+      ->setStrikethrough(FALSE)
+      ->setTextAlignment('left')
+      ->setTextColor('#000')
+      ->setTextTransform('none')
+      ->setUnderline(FALSE)
+      ->setVerticalAlignment('baseline');
+    $components['body']->setTextStyle($style);
+
+    $components['body']->setFormat($data['component_data']['format']);
+    $components['body']->setLayout($this->getComponentLayout($data['component_layout']));
+
+    return $components;
+  }
+
+  /**
+   * News author.
+   */
+  protected function normalizeNewsAuthor($data, $format = NULL, array $context = []) {
+
+    /** @var \Drupal\node\Entity\Node $entity */
+    $entity = $context['entity'];
+
+    // Generate content.
+    /** @var \Drupal\datetime\Plugin\Field\FieldType\DateTimeItem $date */
+    try {
+      $date = $entity->get('field_date')->get(0);
+    }
+    catch (MissingDataException $e) {
+      return FALSE;
+    }
+    $date = \Drupal::service('date.formatter')->format(
+      strtotime($date->getString()),
+      'news_date');
+    $field_name = $data['component_data']['text']['field_name'];
+    /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $authors */
+    $authors = $entity->get($field_name);
+    $names = [];
+    /** @var \Drupal\node\Entity\Node $author */
+    foreach ($authors->referencedEntities() as $author) {
+      $names[] = array_filter([
+        $author->get('field_first_name')->getString(),
+        $author->get('field_middle_name')->getString(),
+        $author->get('field_last_name')->getString(),
+      ]);
+    }
+    if (!$names) {
+      return FALSE;
+    }
+    $names = array_map(function ($name) {
+      return implode(' ', $name);
+    }, $names);
+    $component = new Author("By " . implode(', ', $names) .
+      ' on ' . $date . '.');
+
+    // Text style.
+    $style = new ComponentTextStyle();
+    $style
+      ->setFontName("HelveticaNeue-Italic")
+      ->setFontSize(14)
+      ->setHyphenation(FALSE)
+      ->setStrikethrough(FALSE)
+      ->setTextAlignment('left')
+      ->setTextColor('#646464')
+      ->setTextTransform('none')
+      ->setUnderline(FALSE)
+      ->setVerticalAlignment('baseline');
+    $component->setTextStyle($style);
+
+    $component->setFormat($data['component_data']['format']);
+    $component->setLayout($this->getComponentLayout($data['component_layout']));
+
+    return $component;
+  }
+
+}
diff --git a/docroot/modules/custom/ucsf_applenews/ucsf_applenews.info.yml b/docroot/modules/custom/ucsf_applenews/ucsf_applenews.info.yml
new file mode 100644
index 000000000..005f73da3
--- /dev/null
+++ b/docroot/modules/custom/ucsf_applenews/ucsf_applenews.info.yml
@@ -0,0 +1,5 @@
+name: 'UCSF Apple News'
+type: module
+description: 'Customizations to Apple News integration.'
+core: 8.x
+package: 'UCSF'
diff --git a/docroot/modules/custom/ucsf_applenews/ucsf_applenews.module b/docroot/modules/custom/ucsf_applenews/ucsf_applenews.module
new file mode 100644
index 000000000..3624feac0
--- /dev/null
+++ b/docroot/modules/custom/ucsf_applenews/ucsf_applenews.module
@@ -0,0 +1,8 @@
+<?php
+
+/**
+ * @file
+ * Contains ucsf_applenews.module.
+ */
+
+use Drupal\Core\Form\FormStateInterface;
diff --git a/docroot/sites/default/services.yml b/docroot/sites/default/services.yml
index e1bbbc7e2..1abb82d19 100644
--- a/docroot/sites/default/services.yml
+++ b/docroot/sites/default/services.yml
@@ -172,3 +172,14 @@ parameters:
     maxAge: false
     # Sets the Access-Control-Allow-Credentials header.
     supportsCredentials: false
+services:
+  serializer.applenews.content_entity:
+    class: Drupal\ucsf_applenews\Normalizer\UcsfApplenewsContentEntityNormalizer
+    arguments: ['@entity_type.manager']
+    tags:
+      - { name: normalizer, priority: 1 }
+  serializer.applenews.text.component:
+    class: \Drupal\ucsf_applenews\Normalizer\UcsfApplenewsTextComponentNormalizer
+    arguments: ['@plugin.manager.applenews_component_type']
+    tags:
+      - { name: normalizer, priority: 1 }